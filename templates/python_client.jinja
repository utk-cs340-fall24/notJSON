from dataclasses import dataclass
import ctypes
import requests
import struct

typedict = {
    'i32' : ctypes.c_int32,
    'string' : ctypes.c_uint64,
}

{% for message in messages -%}
@dataclass
class {{ message.name }} :
  {% for field in message.fields %}
    {% if field.array %}
    list : typedict[ '{{ field.type_field }}' ]
    {{ field.name}} : ctypes.c_size_t 
    {% else %}
    {{ field.name }} : typedict[ '{{ field.type_field }}' ] 
    {% endif %}
  {% endfor %}

{% endfor %}

def main():
    print("hello")

    #make example http get request
    x = requests.get('https://google.com')
    print('Google get request status code: ')
    print(x.status_code)


    # use method 1 (sruct library) to print a binary blob of filler
    # data for the reaction dataclass
    print(struct.pack('<Ql', 6, 1023))

    r = reaction(emoji = 1, count =2)

if __name__ == '__main__':
    main()
