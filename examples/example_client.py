# This program is intended to be and example of what
# a client program written in python should look like
# once generated by the tool. The idea of creating this
# file is so that once we know what the client should look
# like we can work backwards on the templating aspect to 
# add some variability into the code. In this program we 
# will hard code in a a message_reaction message data 
# structure. This is only an example and test case. The idea
# of using templates is that in the future the user can 
# specify any new type of message

from dataclasses import dataclass
import ctypes
import requests
import struct

typedict = {
    'i32' : ctypes.c_int32,
    'string' : ctypes.c_uint64,
}


@dataclass
class reaction:
    #emoji : ctypes.c_uint64
    emoji : typedict['string']
    count : typedict['i32']

def main():
    print("hello")

    #make example http get request
    x = requests.get('https://google.com')
    print('Google get request status code: ')
    print(x.status_code)


    # use method 1 (sruct library) to print a binary blob of filler
    # data for the reaction dataclass
    print(struct.pack('<Ql', 6, 1023))

    r = reaction(emoji = 1, count =2)

if __name__ == '__main__':
    main()
